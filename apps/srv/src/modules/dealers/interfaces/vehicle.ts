import { LastPacketInterface } from './last-packet.interface';
import { VehicleSourceUpdateInterface } from './vehicle-source-update.interface';
import { DealerOffice } from './dealer-office.interface';
import { AutostatReport } from '../../autostat/interfaces/autostat-report';
import { WAVehicleInfoResponseDto } from '../../../channels/workshop-automation/dto';
import { OcnDataInterface } from '../../ocn-catalog/interfaces/ocn-data.interface';
import { VehicleLocationInterface } from './vehicle-location.interface';
import { FuelConsumptionInterface } from './fuel-consumption.interface';

export interface Vehicle {
    model: string;
    fullModelName: string;
    vin: string;
    simId: string | null;
    deviceType: string;
    deviceActiveStatus: string;
    address: string | null;
    addressUpdatedAt: Date | null;
    activationDate: Date | null;
    retailDate: Date | null;
    lastPacket: LastPacketInterface | null;
    autostatInfo: AutostatReport | null;
    sources: VehicleSourceUpdateInterface[];
    dealer: DealerOffice | null;
    waInfo: WAVehicleInfoResponseDto | null;
    ocnInfo: OcnDataInterface | null;

    isActivated(): boolean;
    getDrivingStyle(): number;
    getActivationDate(): Date | null;
    getMotoHours(): number;
    getMileage(): number | null;
    getAverageSpeed(): number | null;
    getVoltage(): number | null;
    getLastPacketDate(): Date | null;
    getDeviceId(): string;
    mtaDataAvailable(): boolean;
    getGenerationName(): string;
    getGenerationId(): string;
    getGenerationCode(): string;
    getPower(): number;
    getTransmissionType(): string;
    getEngineName(): string;
    getDriveType(): string;
    getFuelType(): string;
    getEngineVolumeL(): string;
    getEngineVolumeCm(): string;
    getProductionYear(): string;
    getEuroClass(): string;
    getLocation(): VehicleLocationInterface | null;
    getBrand(): string;
    getEquipmentName(): string;
    getFuelConsumption(): FuelConsumptionInterface;
    getModificationName(): string;
    getPromoImages(): string[];
    getSapRetailDate(): Date | null;
    getTankCapacity(): number | null;
    getLastPacketSendDate(): Date | null;
    getWarrantyStartDate(): Date | null;
    getLastPacketUpdateDate(): Date | null;
    getDeviceActiveStatus(): string;
    getRetailDate(): string;
    changeDeviceActiveStatus(active: boolean): void;
}
